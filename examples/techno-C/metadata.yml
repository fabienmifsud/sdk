version: v1
id: example-technology
label: Example Technology
logo: ./logo.png
available: true
description: An amazing technology
contexts:
  - id: aws-10.0
    label: AWS v10.0
    description: Techno v10 on AWS
    available: true
    recommended: false
    trustLevel: stable
    mocksServer: ./apiMock/index.js
    endpoint:
      features:
        - type: URL
          name: url
          label: Endpoint URL
          required: true
          helper: E.g. https://amazingtech.company.com/api/v1
        - type: TEXT
          name: login
          label: Login
        - type: PASSWORD
          name: password
          label: Password
    job:
      features:
        - type: ENDPOINTS
          name: endpoint
          label: Endpoint
          required: true
        - type: SELECT
          name: dataset
          label: Dataset
          required: true
          options:
            script: ./entityForm.js
            function: getDatasets
          dependsOn:
            - endpoint
        - type: SELECT
          name: project
          label: Project
          required: true
          options:
            script: ./entityForm.js
            function: getProjects
          dependsOn:
            - dataset
        - type: SELECT
          name: process
          label: Process
          required: true
          options:
            script: ./entityForm.js
            function: getProcesses
          dependsOn:
            - project
        - type: ARTIFACT
          name: package
          label: Package
          helper: "Compatible upload file : .jar"
        - type: COMMAND_LINE
          name: command
          label: Command line
          required: true
          helper: Linux shell command to launch the job.
          defaultValue: java -jar {file} arg1 arg2
    instance:
      actions:
        onStart:
          script: ./entityActions.js
          function: start
        onStop:
          script: ./entityActions.js
          function: stop
        getStatus:
          script: ./entityActions.js
          function: getStatus
        getLogs:
          script: ./entityActions.js
          function: getLogs
